[gd_scene load_steps=4 format=3 uid="uid://dihn4ucsp6f6t"]

[sub_resource type="GDScript" id="GDScript_u2okt"]
script/source = "extends CharacterBody3D  #mostly a prewritten script apart from key assignment and camera rotation


const SPEED = 5.0
const JUMP_VELOCITY = 5

# Get the gravity from the project settings to be synced with RigidBody nodes.
var gravity = ProjectSettings.get_setting(\"physics/3d/default_gravity\")

@onready var camerabase = $cambase 

func _ready():
	Input.mouse_mode = 2    #mouse clicker is now invisible in game

func _input(event):
	if event is InputEventMouseMotion:
		camerabase.rotation.x -= deg_to_rad(event.relative.y * 1)
		camerabase.rotation.x = clamp(camerabase.rotation.x, deg_to_rad(-90), deg_to_rad(90))  
		#deg to rad clamp stops camera moving over the player for easier gameplay
		rotation.y -= deg_to_rad( event.relative.x * 1 )

func _physics_process(delta):
	# Add the gravity.
	if not is_on_floor():
		velocity.y -= gravity * delta

	# Handle Jump.
	if Input.is_action_just_pressed(\"jump\") and is_on_floor():
		velocity.y = JUMP_VELOCITY

	# Get the input direction and handle the movement/deceleration.
	# As good practice, you should replace UI actions with custom gameplay actions.
	var input_dir = Input.get_vector(\"left\", \"right\", \"foward\", \"back\")
	var direction = (transform.basis * Vector3(input_dir.x, 0, input_dir.y)).normalized()
	if direction:
		velocity.x = direction.x * SPEED
		velocity.z = direction.z * SPEED
	else:
		velocity.x = move_toward(velocity.x, 0, SPEED)
		velocity.z = move_toward(velocity.z, 0, SPEED)

	move_and_slide()
"

[sub_resource type="CapsuleMesh" id="CapsuleMesh_oxn0e"]

[sub_resource type="CapsuleShape3D" id="CapsuleShape3D_oldpl"]

[node name="player" type="CharacterBody3D"]
script = SubResource("GDScript_u2okt")

[node name="MeshInstance3D" type="MeshInstance3D" parent="."]
mesh = SubResource("CapsuleMesh_oxn0e")

[node name="CollisionShape3D" type="CollisionShape3D" parent="."]
shape = SubResource("CapsuleShape3D_oldpl")

[node name="cambase" type="Node3D" parent="."]

[node name="camera3d" type="Camera3D" parent="cambase"]
transform = Transform3D(1, 0, 0, 0, 0.958442, 0.285287, 0, -0.285287, 0.958442, 0, 1.42703, 3.03514)
